{
   "task" : {
      // Deep Symbolic Regression
      "task_type" : "regression",

      // This can either be (1) the name of the benchmark dataset (see
      // benchmarks.csv for a list of supported benchmarks) or (2) a path to a
      // CSV file containing the data.
      "dataset" : "Nguyen-1",

      // To customize a function set, use this! See functions.py for a list of
      // supported functions. Note "const" will add placeholder constants that
      // will be optimized within the training loop. This will considerably
      // increase runtime.
      "function_set": null,

      // Metric to be used for the reward function. See regression.py for
      // supported metrics.
      "metric" : "inv_nrmse",
      "metric_params" : [1.0],

      // Optional alternate metric to be used at evaluation time.
      "extra_metric_test" : null,
      "extra_metric_test_params" : [],

      // NRMSE threshold for early stopping. This is useful for noiseless
      // benchmark problems when DSO discovers the true solution.
      "threshold" : 1e-12,

      // With protected=false, floating-point errors (e.g. log of negative
      // number) will simply returns a minimal reward. With protected=true,
      // "protected" functions will prevent floating-point errors, but may
      // introduce discontinuities in the learned functions.      
      "protected" : false,

      // You can add artificial reward noise directly to the reward function.
      // Note this does NOT add noise to the dataset.
      "reward_noise" : 0.0,
      "reward_noise_type" : "r",
      "normalize_variance" : false
   },

   // Only the key training hyperparameters are listed here. See
   // config_common.json for the full list.
   "training" : {
      "n_samples" : 2000000,
      "batch_size" : 1000,
      "epsilon" : 0.05,

      // Recommended to set this to as many cores as you can use! Especially if
      // using the "const" token.
      "n_cores_batch" : 1
   },

   // Only the key RNN controller hyperparameters are listed here. See
   // config_common.json for the full list.
   "controller" : {
      "learning_rate" : 0.0005,
      "entropy_weight" : 0.03,
      "entropy_gamma" : 0.7
   },

   // Hyperparameters related to including in situ priors and constraints. Each
   // prior must explicitly be turned "on" or it will not be used. See
   // config_common.json for descriptions of each prior.
   "prior": {
      "length" : {
         "min_" : 4,
         "max_" : 30,
         "on" : true
      },
      "repeat" : {
         "tokens" : "const",
         "min_" : null,
         "max_" : 3,
         "on" : true
      },
      "inverse" : {
         "on" : true
      },
      "trig" : {
         "on" : true
      },
      "const" : {
         "on" : true
      },
      "no_inputs" : {
         "on" : true
      },
      "uniform_arity" : {
         "on" : true
      },
      "soft_length" : {
         "loc" : 10,
         "scale" : 5,
         "on" : true
      }
   }
}
